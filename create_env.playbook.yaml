- name: run on local
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: Run terraform
      terraform:
        project_path: "./tf"
        force_init: yes
        state: present
      register: trfrm

    - name: Add instance host
      add_host:
        name: task_manager_server
        groups: nodes
        ansible_host: "{{ trfrm.outputs.servers.value.tg_server }}"
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"
        
- name: Timeout for instance creating
  hosts: 127.0.0.1
  connection: local     
  
  tasks:
    - name: Wait for a ssh port become available
      wait_for:
        host: "{{ trfrm.outputs.servers.value.tg_server }}"
        port: 22

- hosts: task_manager_server
  name: Start mysql server
  become: yes
  tasks:
    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Install MySQL server
      apt:
        name: mysql-server-8.0
        state: present

    - name: Install python3-pip
      apt:
        name: python3-pip
        state: present

    - name: Install PyMySQL using pip
      pip:
        name: pymysql
        state: present
        executable: pip3

    - name: Change server configuration
      ansible.builtin.lineinfile:
        path: /etc/mysql/mysql.conf.d/mysqld.cnf
        regexp: "^bind-address"
        line: "bind-address = 0.0.0.0"

    - name: Start MySQL service
      service:
        name: mysql
        state: restarted
        enabled: yes

    - name: Install net-tools
      apt:
        name: net-tools
        state: present

    - name: Copy sql import script
      copy:
        src: "{{ sql_path  }}"
        dest: /home/ubuntu

- hosts: task_manager_server
  name: Docker
  become: yes
  tasks:
    - block:   
      - name: Update apt cache
        apt:
          update_cache: yes
        become: yes
        
      - name: Add key GPG
        apt_key:
          url: https://download.docker.com/linux/ubuntu/gpg
          state: present
        become: yes
      
      - name: Add docker repository
        apt_repository:
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
          state: present
        become: yes
          
      - name: Install docker
        apt:
          name: docker-ce
          state: present
        become: yes

      - name: Check docker is active
        service:
          name: docker
          enabled: yes
      
      - name: Ensure group "docker" exists
        ansible.builtin.group:
          name: docker
          state: present
      
      - name: Adding user ubuntu to docker group
        user:
          name: ubuntu
          groups: docker
          append: yes
        become: yes
        
      - name: Change docker socket permission
        file:
          path: /var/run/docker.sock
          owner: ubuntu
          group: docker
        become: yes
      
      - name: Restart docker service
        become: yes
        service:
          name: docker
          state: restarted
      
      - name: Copy tar to host
        copy:
          src:  taskmanager-java-jar.tar
          dest: /home/ubuntu/project/
          owner: ubuntu
          group: docker
          mode: 777
        become: yes
      
      - name: Load container from tar
        docker_image:
          name: taskmanager-java-jar:latest
          load_path: /home/ubuntu/project/taskmanager-java-jar.tar
          state: present
          source: load

      - name: Run MySQL docker container
        docker_container:
          name: db-container2
          image: mysql:5.7
          volumes:
            - "/home/ubuntu"
          restart: true
          env:
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: tmpdb
              MYSQL_USER: finley
              MYSQL_PASSWORD: password
          ports:
            - "3305:3305"
      
      - name: Run docker container
        docker_container:
          name: taskmanager-app-container
          image: taskmanager-java-jar:latest
          state: started
          restart_policy: always
          ports:
            - "8069:8069"
        
      rescue:
       - name: Clean up resources because of an error
         terraform:
           project_path: "./tf"
           state: absent 
         delegate_to: 127.0.0.1
